{"ast":null,"code":"import { getBsVer } from 'ngx-bootstrap/utils';\nimport * as i0 from '@angular/core';\nimport { PLATFORM_ID, Injectable, Inject, ElementRef } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { Subject, merge, fromEvent, of, animationFrameScheduler } from 'rxjs';\nvar MapPlacementInToRL;\n\n(function (MapPlacementInToRL) {\n  MapPlacementInToRL[\"top\"] = \"top\";\n  MapPlacementInToRL[\"bottom\"] = \"bottom\";\n  MapPlacementInToRL[\"left\"] = \"left\";\n  MapPlacementInToRL[\"right\"] = \"right\";\n  MapPlacementInToRL[\"auto\"] = \"auto\";\n  MapPlacementInToRL[\"end\"] = \"right\";\n  MapPlacementInToRL[\"start\"] = \"left\";\n  MapPlacementInToRL[\"top left\"] = \"top left\";\n  MapPlacementInToRL[\"top right\"] = \"top right\";\n  MapPlacementInToRL[\"right top\"] = \"right top\";\n  MapPlacementInToRL[\"right bottom\"] = \"right bottom\";\n  MapPlacementInToRL[\"bottom right\"] = \"bottom right\";\n  MapPlacementInToRL[\"bottom left\"] = \"bottom left\";\n  MapPlacementInToRL[\"left bottom\"] = \"left bottom\";\n  MapPlacementInToRL[\"left top\"] = \"left top\";\n  MapPlacementInToRL[\"top start\"] = \"top left\";\n  MapPlacementInToRL[\"top end\"] = \"top right\";\n  MapPlacementInToRL[\"end top\"] = \"right top\";\n  MapPlacementInToRL[\"end bottom\"] = \"right bottom\";\n  MapPlacementInToRL[\"bottom end\"] = \"bottom right\";\n  MapPlacementInToRL[\"bottom start\"] = \"bottom left\";\n  MapPlacementInToRL[\"start bottom\"] = \"start bottom\";\n  MapPlacementInToRL[\"start top\"] = \"left top\";\n})(MapPlacementInToRL || (MapPlacementInToRL = {}));\n\nvar PlacementForBs5;\n\n(function (PlacementForBs5) {\n  PlacementForBs5[\"top\"] = \"top\";\n  PlacementForBs5[\"bottom\"] = \"bottom\";\n  PlacementForBs5[\"left\"] = \"start\";\n  PlacementForBs5[\"right\"] = \"end\";\n  PlacementForBs5[\"auto\"] = \"auto\";\n  PlacementForBs5[\"end\"] = \"end\";\n  PlacementForBs5[\"start\"] = \"start\";\n  PlacementForBs5[\"top left\"] = \"top start\";\n  PlacementForBs5[\"top right\"] = \"top end\";\n  PlacementForBs5[\"right top\"] = \"end top\";\n  PlacementForBs5[\"right bottom\"] = \"end bottom\";\n  PlacementForBs5[\"bottom right\"] = \"bottom end\";\n  PlacementForBs5[\"bottom left\"] = \"bottom start\";\n  PlacementForBs5[\"left bottom\"] = \"start bottom\";\n  PlacementForBs5[\"left top\"] = \"start top\";\n  PlacementForBs5[\"top start\"] = \"top start\";\n  PlacementForBs5[\"top end\"] = \"top end\";\n  PlacementForBs5[\"end top\"] = \"end top\";\n  PlacementForBs5[\"end bottom\"] = \"end bottom\";\n  PlacementForBs5[\"bottom end\"] = \"bottom end\";\n  PlacementForBs5[\"bottom start\"] = \"bottom start\";\n  PlacementForBs5[\"start bottom\"] = \"start bottom\";\n  PlacementForBs5[\"start top\"] = \"start top\";\n})(PlacementForBs5 || (PlacementForBs5 = {}));\n\nfunction getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  } // NOTE: 1 DOM access here\n\n\n  const window = element.ownerDocument.defaultView;\n  const css = window?.getComputedStyle(element, null); // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n\n  return property ? css && css[property] : css;\n}\n/**\n * Returns the offset parent of the given element\n */\n\n\nfunction getOffsetParent(element) {\n  if (!element) {\n    return document.documentElement;\n  }\n\n  const noOffsetParent = null; // NOTE: 1 DOM access here\n\n  let offsetParent = element?.offsetParent; // Skip hidden elements which don't have an offsetParent\n\n  let sibling = void 0;\n\n  while (offsetParent === noOffsetParent && element.nextElementSibling && sibling !== element.nextElementSibling) {\n    // todo: valorkin fix\n    sibling = element.nextElementSibling;\n    offsetParent = sibling.offsetParent;\n  }\n\n  const nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return sibling ? sibling.ownerDocument.documentElement : document.documentElement;\n  } // .offsetParent will return the closest TH, TD or TABLE in case\n\n\n  if (offsetParent && ['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n} // todo: valorkin fix\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nfunction isOffsetContainer(element) {\n  const {\n    nodeName\n  } = element;\n\n  if (nodeName === 'BODY') {\n    return false;\n  }\n\n  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;\n}\n/**\n * Finds the root node (document, shadowDOM root) of the given element\n */\n\n\nfunction getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n/**\n * Finds the offset parent common to the two provided nodes\n */\n\n\nfunction findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return document.documentElement;\n  } // Here we make sure to give as \"start\" the element that comes first in the DOM\n\n\n  const order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;\n  const start = order ? element1 : element2;\n  const end = order ? element2 : element1; // Get common ancestor container\n\n  const range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0); // todo: valorkin fix\n\n  const commonAncestorContainer = range.commonAncestorContainer; // Both nodes are inside #document\n\n  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  } // one of the nodes is inside shadowDOM, find which one\n\n\n  const element1root = getRoot(element1);\n\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n/**\n * Finds the first parent of an element that has a transformed property defined\n */\n\n\nfunction getFixedPositionOffsetParent(element) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element || !element.parentElement) {\n    return document.documentElement;\n  }\n\n  let el = element.parentElement;\n\n  while (el?.parentElement && getStyleComputedProperty(el, 'transform') === 'none') {\n    el = el.parentElement;\n  }\n\n  return el || document.documentElement;\n}\n/**\n * Helper to detect borders of a given element\n */\n\n\nfunction getBordersSize(styles, axis) {\n  const sideA = axis === 'x' ? 'Left' : 'Top';\n  const sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n  return parseFloat(styles[`border${sideA}Width`]) + parseFloat(styles[`border${sideB}Width`]);\n}\n\nfunction getSize(axis, body, html, computedStyle) {\n  const _body = body;\n  const _html = html;\n  const _computedStyle = computedStyle;\n  return Math.max(_body[`offset${axis}`], _body[`scroll${axis}`], _html[`client${axis}`], _html[`offset${axis}`], _html[`scroll${axis}`], 0);\n}\n\nfunction getWindowSizes(document) {\n  const body = document.body;\n  const html = document.documentElement;\n  const computedStyle = void 0;\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle)\n  };\n}\n\nfunction getClientRect(offsets) {\n  return { ...offsets,\n    right: (offsets.left || 0) + offsets.width,\n    bottom: (offsets.top || 0) + offsets.height\n  };\n}\n/**\n * Tells if a given input is a number\n */\n\n\nfunction isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(Number(n));\n} // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nfunction isNumber(value) {\n  return typeof value === 'number' || Object.prototype.toString.call(value) === '[object Number]';\n}\n/**\n * Get bounding client rect of given element\n */\n\n\nfunction getBoundingClientRect(element) {\n  const rect = element.getBoundingClientRect(); // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  // try {\n  //   if (isIE(10)) {\n  //     const scrollTop = getScroll(element, 'top');\n  //     const scrollLeft = getScroll(element, 'left');\n  //     if (rect && isNumber(rect.top) && isNumber(rect.left) && isNumber(rect.bottom) && isNumber(rect.right)) {\n  //       rect.top += scrollTop;\n  //       rect.left += scrollLeft;\n  //       rect.bottom += scrollTop;\n  //       rect.right += scrollLeft;\n  //     }\n  //   }\n  // } catch (e) {\n  //   return rect;\n  // }\n\n  if (!(rect && isNumber(rect.top) && isNumber(rect.left) && isNumber(rect.bottom) && isNumber(rect.right))) {\n    return rect;\n  }\n\n  const result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top\n  }; // subtract scrollbar size from sizes\n\n  const sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : undefined;\n  const width = sizes?.width || element.clientWidth || isNumber(rect.right) && isNumber(result.left) && rect.right - result.left || 0;\n  const height = sizes?.height || element.clientHeight || isNumber(rect.bottom) && isNumber(result.top) && rect.bottom - result.top || 0;\n  let horizScrollbar = element.offsetWidth - width;\n  let vertScrollbar = element.offsetHeight - height; // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n\n  if (horizScrollbar || vertScrollbar) {\n    const styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n/**\n * Returns the parentNode or the host of the element\n */\n// todo: valorkin fix\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nfunction getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n\n  return element.parentNode || element.host;\n}\n/**\n * Returns the scrolling parent of the given element\n */\n// todo: valorkin fix\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nfunction getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) {\n    return document.body;\n  }\n\n  switch (element.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body;\n\n    case '#document':\n      return element.body;\n\n    default:\n  } // Firefox want us to check `-x` and `-y` variations as well\n\n\n  const {\n    overflow,\n    overflowX,\n    overflowY\n  } = getStyleComputedProperty(element);\n\n  if (/(auto|scroll|overlay)/.test(String(overflow) + String(overflowY) + String(overflowX))) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n\nfunction getOffsetRectRelativeToArbitraryNode(children, parent, fixedPosition = false) {\n  const isHTML = parent.nodeName === 'HTML';\n  const childrenRect = getBoundingClientRect(children);\n  const parentRect = getBoundingClientRect(parent);\n  const scrollParent = getScrollParent(children);\n  const styles = getStyleComputedProperty(parent);\n  const borderTopWidth = parseFloat(styles.borderTopWidth);\n  const borderLeftWidth = parseFloat(styles.borderLeftWidth); // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n\n  if (fixedPosition && isHTML) {\n    parentRect.top = Math.max(parentRect.top ?? 0, 0);\n    parentRect.left = Math.max(parentRect.left ?? 0, 0);\n  }\n\n  const offsets = getClientRect({\n    top: (childrenRect.top ?? 0) - (parentRect.top ?? 0) - borderTopWidth,\n    left: (childrenRect.left ?? 0) - (parentRect.left ?? 0) - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0; // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n\n  if (isHTML) {\n    const marginTop = parseFloat(styles.marginTop);\n    const marginLeft = parseFloat(styles.marginLeft);\n\n    if (isNumber(offsets.top)) {\n      offsets.top -= borderTopWidth - marginTop;\n    }\n\n    if (isNumber(offsets.bottom)) {\n      offsets.bottom -= borderTopWidth - marginTop;\n    }\n\n    if (isNumber(offsets.left)) {\n      offsets.left -= borderLeftWidth - marginLeft;\n    }\n\n    if (isNumber(offsets.right)) {\n      offsets.right -= borderLeftWidth - marginLeft;\n    } // Attach marginTop and marginLeft because in some circumstances we may need them\n\n\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  return offsets;\n}\n/**\n * Gets the scroll value of the given element in the given side (top and left)\n */\n\n\nfunction getScroll(element, side = 'top') {\n  const upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  const nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    const html = element.ownerDocument.documentElement;\n    const scrollingElement = element.ownerDocument.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n\nfunction getViewportOffsetRectRelativeToArtbitraryNode(element, excludeScroll = false) {\n  const html = element.ownerDocument.documentElement;\n  const relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  const width = Math.max(html.clientWidth, window.innerWidth || 0);\n  const height = Math.max(html.clientHeight, window.innerHeight || 0);\n  const scrollTop = !excludeScroll ? getScroll(html) : 0;\n  const scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n  const offset = {\n    top: scrollTop - Number(relativeOffset?.top) + Number(relativeOffset?.marginTop),\n    left: scrollLeft - Number(relativeOffset?.left) + Number(relativeOffset?.marginLeft),\n    width,\n    height\n  };\n  return getClientRect(offset);\n}\n/**\n * Check if the given element is fixed or is inside a fixed parent\n */\n\n\nfunction isFixed(element) {\n  const nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n\n  return isFixed(getParentNode(element));\n}\n\nfunction getBoundaries(target, host, padding = 0, boundariesElement, fixedPosition = false) {\n  // NOTE: 1 DOM access here\n  let boundaries = {\n    top: 0,\n    left: 0\n  };\n  const offsetParent = fixedPosition ? getFixedPositionOffsetParent(target) : findCommonOffsetParent(target, host); // Handle viewport case\n\n  if (boundariesElement === 'viewport') {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n  } else {\n    // Handle other cases based on DOM element used as boundaries\n    let boundariesNode;\n\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(host));\n\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = target.ownerDocument.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = target.ownerDocument.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    const offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition); // In case of HTML, we need a different computation\n\n    if (offsets && boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      const {\n        height,\n        width\n      } = getWindowSizes(target.ownerDocument);\n\n      if (isNumber(boundaries.top) && isNumber(offsets.top) && isNumber(offsets.marginTop)) {\n        boundaries.top += offsets.top - offsets.marginTop;\n      }\n\n      if (isNumber(boundaries.top)) {\n        boundaries.bottom = Number(height) + Number(offsets.top);\n      }\n\n      if (isNumber(boundaries.left) && isNumber(offsets.left) && isNumber(offsets.marginLeft)) {\n        boundaries.left += offsets.left - offsets.marginLeft;\n      }\n\n      if (isNumber(boundaries.top)) {\n        boundaries.right = Number(width) + Number(offsets.left);\n      }\n    } else if (offsets) {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  } // Add paddings\n\n\n  if (isNumber(boundaries.left)) {\n    boundaries.left += padding;\n  }\n\n  if (isNumber(boundaries.top)) {\n    boundaries.top += padding;\n  }\n\n  if (isNumber(boundaries.right)) {\n    boundaries.right -= padding;\n  }\n\n  if (isNumber(boundaries.bottom)) {\n    boundaries.bottom -= padding;\n  }\n\n  return boundaries;\n}\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n */\n\n\nfunction getArea({\n  width,\n  height\n}) {\n  return width * height;\n}\n\nfunction computeAutoPlacement(placement, refRect, target, host, allowedPositions = ['top', 'bottom', 'right', 'left'], boundariesElement = 'viewport', padding = 0) {\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  const boundaries = getBoundaries(target, host, padding, boundariesElement);\n  const rects = {\n    top: {\n      width: boundaries?.width ?? 0,\n      height: (refRect?.top ?? 0) - (boundaries?.top ?? 0)\n    },\n    right: {\n      width: (boundaries?.right ?? 0) - (refRect?.right ?? 0),\n      height: boundaries?.height ?? 0\n    },\n    bottom: {\n      width: boundaries?.width ?? 0,\n      height: (boundaries?.bottom ?? 0) - (refRect?.bottom ?? 0)\n    },\n    left: {\n      width: (refRect.left ?? 0) - (boundaries?.left ?? 0),\n      height: boundaries?.height ?? 0\n    }\n  };\n  const sortedAreas = Object.keys(rects).map(key => ({\n    position: key,\n    ...rects[key],\n    area: getArea(rects[key])\n  })).sort((a, b) => b.area - a.area);\n  let filteredAreas = sortedAreas.filter(({\n    width,\n    height\n  }) => {\n    return width >= target.clientWidth && height >= target.clientHeight;\n  });\n  filteredAreas = filteredAreas.filter(({\n    position\n  }) => {\n    return allowedPositions.some(allowedPosition => {\n      return allowedPosition === position;\n    });\n  });\n  const computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].position : sortedAreas[0].position;\n  const variation = placement.split(' ')[1]; // for tooltip on auto position\n\n  target.className = target.className.replace(/bs-tooltip-auto/g, `bs-tooltip-${getBsVer().isBs5 ? PlacementForBs5[computedPlacement] : computedPlacement}`);\n  return computedPlacement + (variation ? `-${variation}` : '');\n}\n\nfunction getOffsets(data) {\n  return {\n    width: data.offsets.target.width,\n    height: data.offsets.target.height,\n    left: Math.floor(data.offsets.target.left ?? 0),\n    top: Math.round(data.offsets.target.top ?? 0),\n    bottom: Math.round(data.offsets.target.bottom ?? 0),\n    right: Math.floor(data.offsets.target.right ?? 0)\n  };\n}\n/**\n * Get the opposite placement of the given one\n */\n\n\nfunction getOppositePlacement(placement) {\n  const hash = {\n    left: 'right',\n    right: 'left',\n    bottom: 'top',\n    top: 'bottom'\n  };\n  return placement.replace(/left|right|bottom|top/g, matched => hash[matched]);\n}\n/**\n * Get the opposite placement variation of the given one\n */\n\n\nfunction getOppositeVariation(variation) {\n  if (variation === 'right') {\n    return 'left';\n  } else if (variation === 'left') {\n    return 'right';\n  }\n\n  return variation;\n}\n\nconst parse = (value, def = 0) => value ? parseFloat(value) : def;\n\nfunction getOuterSizes(element) {\n  const window = element.ownerDocument.defaultView;\n  const styles = window?.getComputedStyle(element);\n  const x = parse(styles?.marginTop) + parse(styles?.marginBottom);\n  const y = parse(styles?.marginLeft) + parse(styles?.marginRight);\n  return {\n    width: Number(element.offsetWidth) + y,\n    height: Number(element.offsetHeight) + x\n  };\n}\n/**\n * Get offsets to the reference element\n */\n\n\nfunction getReferenceOffsets(target, host, fixedPosition) {\n  const commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(target) : findCommonOffsetParent(target, host);\n  return getOffsetRectRelativeToArbitraryNode(host, commonOffsetParent, fixedPosition);\n}\n/**\n * Get offsets to the target\n */\n\n\nfunction getTargetOffsets(target, hostOffsets, position) {\n  const placement = position.split(' ')[0]; // Get target node sizes\n\n  const targetRect = getOuterSizes(target); // Add position, width and height to our offsets object\n\n  const targetOffsets = {\n    width: targetRect.width,\n    height: targetRect.height\n  }; // depending by the target placement we have to compute its offsets slightly differently\n\n  const isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  const mainSide = isHoriz ? 'top' : 'left';\n  const secondarySide = isHoriz ? 'left' : 'top';\n  const measurement = isHoriz ? 'height' : 'width';\n  const secondaryMeasurement = !isHoriz ? 'height' : 'width';\n  targetOffsets[mainSide] = (hostOffsets[mainSide] ?? 0) + hostOffsets[measurement] / 2 - targetRect[measurement] / 2;\n  targetOffsets[secondarySide] = placement === secondarySide ? (hostOffsets[secondarySide] ?? 0) - targetRect[secondaryMeasurement] : hostOffsets[getOppositePlacement(secondarySide)] ?? 0;\n  return targetOffsets;\n}\n\nfunction isModifierEnabled(options, modifierName) {\n  return !!options.modifiers[modifierName]?.enabled;\n}\n\nconst availablePositions = {\n  top: ['top', 'top start', 'top end'],\n  bottom: ['bottom', 'bottom start', 'bottom end'],\n  start: ['start', 'start top', 'start bottom'],\n  end: ['end', 'end top', 'end bottom']\n};\n\nfunction checkPopoverMargin(placement, checkPosition) {\n  if (!getBsVer().isBs5) {\n    return false;\n  }\n\n  return availablePositions[checkPosition].includes(placement);\n}\n\nfunction checkMargins(placement) {\n  if (!getBsVer().isBs5) {\n    return '';\n  }\n\n  if (checkPopoverMargin(placement, 'end')) {\n    return 'ms-2';\n  }\n\n  if (checkPopoverMargin(placement, 'start')) {\n    return 'me-2';\n  }\n\n  if (checkPopoverMargin(placement, 'top')) {\n    return 'mb-2';\n  }\n\n  if (checkPopoverMargin(placement, 'bottom')) {\n    return 'mt-2';\n  }\n\n  return '';\n}\n\nfunction updateContainerClass(data, renderer) {\n  const target = data.instance.target;\n  let containerClass = target.className;\n  const dataPlacement = getBsVer().isBs5 ? PlacementForBs5[data.placement] : data.placement;\n\n  if (data.placementAuto) {\n    containerClass = containerClass.replace(/bs-popover-auto/g, `bs-popover-${dataPlacement}`);\n    containerClass = containerClass.replace(/ms-2|me-2|mb-2|mt-2/g, '');\n    containerClass = containerClass.replace(/bs-tooltip-auto/g, `bs-tooltip-${dataPlacement}`);\n    containerClass = containerClass.replace(/\\sauto/g, ` ${dataPlacement}`);\n\n    if (containerClass.indexOf('popover') !== -1) {\n      containerClass = containerClass + ' ' + checkMargins(dataPlacement);\n    }\n\n    if (containerClass.indexOf('popover') !== -1 && containerClass.indexOf('popover-auto') === -1) {\n      containerClass += ' popover-auto';\n    }\n\n    if (containerClass.indexOf('tooltip') !== -1 && containerClass.indexOf('tooltip-auto') === -1) {\n      containerClass += ' tooltip-auto';\n    }\n  }\n\n  containerClass = containerClass.replace(/left|right|top|bottom|end|start/g, `${dataPlacement.split(' ')[0]}`);\n\n  if (renderer) {\n    renderer.setAttribute(target, 'class', containerClass);\n    return;\n  }\n\n  target.className = containerClass;\n}\n\nfunction setStyles(element, styles, renderer) {\n  if (!element || !styles) {\n    return;\n  }\n\n  Object.keys(styles).forEach(prop => {\n    let unit = ''; // add unit if the value is numeric and is one of the following\n\n    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {\n      unit = 'px';\n    }\n\n    if (renderer) {\n      renderer.setStyle(element, prop, `${String(styles[prop])}${unit}`);\n      return;\n    } // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n    element.style[prop] = String(styles[prop]) + unit;\n  });\n}\n\nfunction arrow(data) {\n  let targetOffsets = data.offsets.target; // if arrowElement is a string, suppose it's a CSS selector\n\n  const arrowElement = data.instance.target.querySelector('.arrow'); // if arrowElement is not found, don't run the modifier\n\n  if (!arrowElement) {\n    return data;\n  }\n\n  const isVertical = ['left', 'right'].indexOf(data.placement.split(' ')[0]) !== -1;\n  const len = isVertical ? 'height' : 'width';\n  const sideCapitalized = isVertical ? 'Top' : 'Left';\n  const side = sideCapitalized.toLowerCase();\n  const altSide = isVertical ? 'left' : 'top';\n  const opSide = isVertical ? 'bottom' : 'right';\n  const arrowElementSize = getOuterSizes(arrowElement)[len];\n  const placementVariation = data.placement.split(' ')[1]; // top/left side\n\n  if ((data.offsets.host[opSide] ?? 0) - arrowElementSize < (targetOffsets[side] ?? 0)) {\n    targetOffsets[side] -= (targetOffsets[side] ?? 0) - ((data.offsets.host[opSide] ?? 0) - arrowElementSize);\n  } // bottom/right side\n\n\n  if (Number(data.offsets.host[side]) + Number(arrowElementSize) > (targetOffsets[opSide] ?? 0)) {\n    targetOffsets[side] += Number(data.offsets.host[side]) + Number(arrowElementSize) - Number(targetOffsets[opSide]);\n  }\n\n  targetOffsets = getClientRect(targetOffsets); // Compute the sideValue using the updated target offsets\n  // take target margin in account because we don't have this info available\n\n  const css = getStyleComputedProperty(data.instance.target);\n  const targetMarginSide = parseFloat(css[`margin${sideCapitalized}`]) || 0;\n  const targetBorderSide = parseFloat(css[`border${sideCapitalized}Width`]) || 0; // compute center of the target\n\n  let center;\n\n  if (!placementVariation) {\n    center = Number(data.offsets.host[side]) + Number(data.offsets.host[len] / 2 - arrowElementSize / 2);\n  } else {\n    const targetBorderRadius = parseFloat(css[\"borderRadius\"]) || 0;\n    const targetSideArrowOffset = Number(targetMarginSide + targetBorderSide + targetBorderRadius);\n    center = side === placementVariation ? Number(data.offsets.host[side]) + targetSideArrowOffset : Number(data.offsets.host[side]) + Number(data.offsets.host[len] - targetSideArrowOffset);\n  }\n\n  let sideValue = center - (targetOffsets[side] ?? 0) - targetMarginSide - targetBorderSide; // prevent arrowElement from being placed not contiguously to its target\n\n  sideValue = Math.max(Math.min(targetOffsets[len] - (arrowElementSize + 5), sideValue), 0);\n  data.offsets.arrow = {\n    [side]: Math.round(sideValue),\n    [altSide]: '' // make sure to unset any eventual altSide value from the DOM node\n\n  };\n  data.instance.arrow = arrowElement;\n  return data;\n}\n\nfunction flip(data) {\n  data.offsets.target = getClientRect(data.offsets.target);\n\n  if (!isModifierEnabled(data.options, 'flip')) {\n    data.offsets.target = { ...data.offsets.target,\n      ...getTargetOffsets(data.instance.target, data.offsets.host, data.placement)\n    };\n    return data;\n  }\n\n  const boundaries = getBoundaries(data.instance.target, data.instance.host, 0, // padding\n  'viewport', false // positionFixed\n  );\n  let placement = data.placement.split(' ')[0];\n  let variation = data.placement.split(' ')[1] || '';\n  const offsetsHost = data.offsets.host;\n  const target = data.instance.target;\n  const host = data.instance.host;\n  const adaptivePosition = computeAutoPlacement('auto', offsetsHost, target, host, data.options.allowedPositions);\n  const flipOrder = [placement, adaptivePosition];\n  flipOrder.forEach((step, index) => {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return;\n    }\n\n    placement = data.placement.split(' ')[0]; // using floor because the host offsets may contain decimals we are not going to consider here\n\n    const overlapsRef = placement === 'left' && Math.floor(data.offsets.target.right ?? 0) > Math.floor(data.offsets.host.left ?? 0) || placement === 'right' && Math.floor(data.offsets.target.left ?? 0) < Math.floor(data.offsets.host.right ?? 0) || placement === 'top' && Math.floor(data.offsets.target.bottom ?? 0) > Math.floor(data.offsets.host.top ?? 0) || placement === 'bottom' && Math.floor(data.offsets.target.top ?? 0) < Math.floor(data.offsets.host.bottom ?? 0);\n    const overflowsLeft = Math.floor(data.offsets.target.left ?? 0) < Math.floor(boundaries.left ?? 0);\n    const overflowsRight = Math.floor(data.offsets.target.right ?? 0) > Math.floor(boundaries.right ?? 0);\n    const overflowsTop = Math.floor(data.offsets.target.top ?? 0) < Math.floor(boundaries.top ?? 0);\n    const overflowsBottom = Math.floor(data.offsets.target.bottom ?? 0) > Math.floor(boundaries.bottom ?? 0);\n    const overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom; // flip the variation if required\n\n    const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n    const flippedVariation = isVertical && variation === 'left' && overflowsLeft || isVertical && variation === 'right' && overflowsRight || !isVertical && variation === 'left' && overflowsTop || !isVertical && variation === 'right' && overflowsBottom;\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? ` ${variation}` : '');\n      data.offsets.target = { ...data.offsets.target,\n        ...getTargetOffsets(data.instance.target, data.offsets.host, data.placement)\n      };\n    }\n  });\n  return data;\n}\n\nfunction initData(targetElement, hostElement, position, options) {\n  if (!targetElement || !hostElement) {\n    return;\n  }\n\n  const hostElPosition = getReferenceOffsets(targetElement, hostElement);\n\n  if (!position.match(/^(auto)*\\s*(left|right|top|bottom|start|end)*$/) && !position.match(/^(left|right|top|bottom|start|end)*(?: (left|right|top|bottom|start|end))*$/)) {\n    position = 'auto';\n  }\n\n  const placementAuto = !!position.match(/auto/g); // support old placements 'auto left|right|top|bottom'\n\n  let placement = position.match(/auto\\s(left|right|top|bottom|start|end)/) ? position.split(' ')[1] || 'auto' : position; // Normalize placements that have identical main placement and variation (\"right right\" => \"right\").\n\n  const matches = placement.match(/^(left|right|top|bottom|start|end)* ?(?!\\1)(left|right|top|bottom|start|end)?/);\n\n  if (matches) {\n    placement = matches[1] + (matches[2] ? ` ${matches[2]}` : '');\n  } // \"left right\", \"top bottom\" etc. placements also considered incorrect.\n\n\n  if (['left right', 'right left', 'top bottom', 'bottom top'].indexOf(placement) !== -1) {\n    placement = 'auto';\n  }\n\n  placement = computeAutoPlacement(placement, hostElPosition, targetElement, hostElement, options ? options.allowedPositions : undefined);\n  const targetOffset = getTargetOffsets(targetElement, hostElPosition, placement);\n  return {\n    options: options || {\n      modifiers: {}\n    },\n    instance: {\n      target: targetElement,\n      host: hostElement,\n      arrow: void 0\n    },\n    offsets: {\n      target: targetOffset,\n      host: hostElPosition,\n      arrow: void 0\n    },\n    positionFixed: false,\n    placement,\n    placementAuto\n  };\n}\n\nfunction preventOverflow(data) {\n  if (!isModifierEnabled(data.options, 'preventOverflow')) {\n    return data;\n  } // NOTE: DOM access here\n  // resets the target Offsets's position so that the document size can be calculated excluding\n  // the size of the targetOffsets element itself\n\n\n  const transformProp = 'transform';\n  const targetStyles = data.instance.target.style; // assignment to help minification\n\n  const {\n    top,\n    left,\n    [transformProp]: transform\n  } = targetStyles;\n  targetStyles.top = '';\n  targetStyles.left = '';\n  targetStyles[transformProp] = '';\n  const boundaries = getBoundaries(data.instance.target, data.instance.host, 0, // padding\n  data.options.modifiers.preventOverflow?.boundariesElement || 'scrollParent', false // positionFixed\n  ); // NOTE: DOM access here\n  // restores the original style properties after the offsets have been computed\n\n  targetStyles.top = top;\n  targetStyles.left = left;\n  targetStyles[transformProp] = transform;\n  const order = ['left', 'right', 'top', 'bottom'];\n  const check = {\n    primary(placement) {\n      let value = data.offsets.target[placement]; // options.escapeWithReference\n\n      if ((data.offsets.target[placement] ?? 0) < (boundaries[placement] ?? 0)) {\n        value = Math.max(data.offsets.target[placement] ?? 0, boundaries[placement] ?? 0);\n      }\n\n      return {\n        [placement]: value\n      };\n    },\n\n    secondary(placement) {\n      const isPlacementHorizontal = placement === 'right';\n      const mainSide = isPlacementHorizontal ? 'left' : 'top';\n      const measurement = isPlacementHorizontal ? 'width' : 'height';\n      let value = data.offsets.target[mainSide]; // escapeWithReference\n\n      if ((data.offsets.target[placement] ?? 0) > (boundaries[placement] ?? 0)) {\n        value = Math.min(data.offsets.target[mainSide] ?? 0, (boundaries[placement] ?? 0) - data.offsets.target[measurement]);\n      }\n\n      return {\n        [mainSide]: value\n      };\n    }\n\n  };\n  order.forEach(placement => {\n    const side = ['left', 'top', 'start'].indexOf(placement) !== -1 ? check['primary'] : check['secondary'];\n    data.offsets.target = { ...data.offsets.target,\n      ...side(placement)\n    };\n  });\n  return data;\n}\n\nfunction shift(data) {\n  const placement = data.placement;\n  const basePlacement = placement.split(' ')[0];\n  const shiftVariation = placement.split(' ')[1];\n\n  if (shiftVariation) {\n    const {\n      host,\n      target\n    } = data.offsets;\n    const isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    const side = isVertical ? 'left' : 'top';\n    const measurement = isVertical ? 'width' : 'height';\n    const shiftOffsets = {\n      start: {\n        [side]: host[side]\n      },\n      end: {\n        [side]: (host[side] ?? 0) + host[measurement] - target[measurement]\n      }\n    };\n    data.offsets.target = { ...target,\n      ...{\n        [side]: side === shiftVariation ? shiftOffsets.start[side] : shiftOffsets.end[side]\n      }\n    };\n  }\n\n  return data;\n}\n\nclass Positioning {\n  position(hostElement, targetElement\n  /*, round = true*/\n  ) {\n    return this.offset(hostElement, targetElement\n    /*, false*/\n    );\n  }\n\n  offset(hostElement, targetElement\n  /*, round = true*/\n  ) {\n    return getReferenceOffsets(targetElement, hostElement);\n  }\n\n  positionElements(hostElement, targetElement, position, appendToBody, options) {\n    const chainOfModifiers = [flip, shift, preventOverflow, arrow];\n    const _position = MapPlacementInToRL[position];\n    const data = initData(targetElement, hostElement, _position, options);\n\n    if (!data) {\n      return;\n    }\n\n    return chainOfModifiers.reduce((modifiedData, modifier) => modifier(modifiedData), data);\n  }\n\n}\n\nconst positionService = new Positioning();\n\nfunction positionElements(hostElement, targetElement, placement, appendToBody, options, renderer) {\n  const data = positionService.positionElements(hostElement, targetElement, placement, appendToBody, options);\n\n  if (!data) {\n    return;\n  }\n\n  const offsets = getOffsets(data);\n  setStyles(targetElement, {\n    'will-change': 'transform',\n    top: '0px',\n    left: '0px',\n    transform: `translate3d(${offsets.left}px, ${offsets.top}px, 0px)`\n  }, renderer);\n\n  if (data.instance.arrow) {\n    setStyles(data.instance.arrow, data.offsets.arrow, renderer);\n  }\n\n  updateContainerClass(data, renderer);\n}\n\nclass PositioningService {\n  constructor(ngZone, rendererFactory, platformId) {\n    this.update$$ = new Subject();\n    this.positionElements = new Map();\n    this.isDisabled = false;\n\n    if (isPlatformBrowser(platformId)) {\n      ngZone.runOutsideAngular(() => {\n        this.triggerEvent$ = merge(fromEvent(window, 'scroll', {\n          passive: true\n        }), fromEvent(window, 'resize', {\n          passive: true\n        }), of(0, animationFrameScheduler), this.update$$);\n        this.triggerEvent$.subscribe(() => {\n          if (this.isDisabled) {\n            return;\n          }\n\n          this.positionElements // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          .forEach(positionElement => {\n            positionElements(_getHtmlElement(positionElement.target), _getHtmlElement(positionElement.element), positionElement.attachment, positionElement.appendToBody, this.options, rendererFactory.createRenderer(null, null));\n          });\n        });\n      });\n    }\n  }\n\n  position(options) {\n    this.addPositionElement(options);\n  }\n\n  get event$() {\n    return this.triggerEvent$;\n  }\n\n  disable() {\n    this.isDisabled = true;\n  }\n\n  enable() {\n    this.isDisabled = false;\n  }\n\n  addPositionElement(options) {\n    this.positionElements.set(_getHtmlElement(options.element), options);\n  }\n\n  calcPosition() {\n    this.update$$.next(null);\n  }\n\n  deletePositionElement(elRef) {\n    this.positionElements.delete(_getHtmlElement(elRef));\n  }\n\n  setOptions(options) {\n    this.options = options;\n  }\n\n}\n\nPositioningService.ɵfac = function PositioningService_Factory(t) {\n  return new (t || PositioningService)(i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(i0.RendererFactory2), i0.ɵɵinject(PLATFORM_ID));\n};\n\nPositioningService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: PositioningService,\n  factory: PositioningService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PositioningService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }, {\n      type: i0.RendererFactory2\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, null);\n})();\n\nfunction _getHtmlElement(element) {\n  // it means that we got a selector\n  if (typeof element === 'string') {\n    return document.querySelector(element);\n  }\n\n  if (element instanceof ElementRef) {\n    return element.nativeElement;\n  }\n\n  return element ?? null;\n}\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { PlacementForBs5, Positioning, PositioningService, checkMargins, positionElements };","map":{"version":3,"sources":["/Users/simonmendes/Desktop/DEV-CLUB/FullStack/juliana-fullstack/Front/ProEventos-App/node_modules/ngx-bootstrap/positioning/fesm2020/ngx-bootstrap-positioning.mjs"],"names":["getBsVer","i0","PLATFORM_ID","Injectable","Inject","ElementRef","isPlatformBrowser","Subject","merge","fromEvent","of","animationFrameScheduler","MapPlacementInToRL","PlacementForBs5","getStyleComputedProperty","element","property","nodeType","window","ownerDocument","defaultView","css","getComputedStyle","getOffsetParent","document","documentElement","noOffsetParent","offsetParent","sibling","nextElementSibling","nodeName","indexOf","isOffsetContainer","firstElementChild","getRoot","node","parentNode","findCommonOffsetParent","element1","element2","order","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","start","end","range","createRange","setStart","setEnd","commonAncestorContainer","contains","element1root","host","getFixedPositionOffsetParent","parentElement","el","getBordersSize","styles","axis","sideA","sideB","parseFloat","getSize","body","html","computedStyle","_body","_html","_computedStyle","Math","max","getWindowSizes","height","width","getClientRect","offsets","right","left","bottom","top","isNumeric","n","isNaN","isFinite","Number","isNumber","value","Object","prototype","toString","call","getBoundingClientRect","rect","result","sizes","undefined","clientWidth","clientHeight","horizScrollbar","offsetWidth","vertScrollbar","offsetHeight","getParentNode","getScrollParent","overflow","overflowX","overflowY","test","String","getOffsetRectRelativeToArbitraryNode","children","parent","fixedPosition","isHTML","childrenRect","parentRect","scrollParent","borderTopWidth","borderLeftWidth","marginTop","marginLeft","getScroll","side","upperSide","scrollingElement","getViewportOffsetRectRelativeToArtbitraryNode","excludeScroll","relativeOffset","innerWidth","innerHeight","scrollTop","scrollLeft","offset","isFixed","getBoundaries","target","padding","boundariesElement","boundaries","boundariesNode","getArea","computeAutoPlacement","placement","refRect","allowedPositions","rects","sortedAreas","keys","map","key","position","area","sort","a","b","filteredAreas","filter","some","allowedPosition","computedPlacement","length","variation","split","className","replace","isBs5","getOffsets","data","floor","round","getOppositePlacement","hash","matched","getOppositeVariation","parse","def","getOuterSizes","x","marginBottom","y","marginRight","getReferenceOffsets","commonOffsetParent","getTargetOffsets","hostOffsets","targetRect","targetOffsets","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","isModifierEnabled","options","modifierName","modifiers","enabled","availablePositions","checkPopoverMargin","checkPosition","includes","checkMargins","updateContainerClass","renderer","instance","containerClass","dataPlacement","placementAuto","setAttribute","setStyles","forEach","prop","unit","setStyle","style","arrow","arrowElement","querySelector","isVertical","len","sideCapitalized","toLowerCase","altSide","opSide","arrowElementSize","placementVariation","targetMarginSide","targetBorderSide","center","targetBorderRadius","targetSideArrowOffset","sideValue","min","flip","offsetsHost","adaptivePosition","flipOrder","step","index","overlapsRef","overflowsLeft","overflowsRight","overflowsTop","overflowsBottom","overflowsBoundaries","flippedVariation","initData","targetElement","hostElement","hostElPosition","match","matches","targetOffset","positionFixed","preventOverflow","transformProp","targetStyles","transform","check","primary","secondary","isPlacementHorizontal","shift","basePlacement","shiftVariation","shiftOffsets","Positioning","positionElements","appendToBody","chainOfModifiers","_position","reduce","modifiedData","modifier","positionService","PositioningService","constructor","ngZone","rendererFactory","platformId","update$$","Map","isDisabled","runOutsideAngular","triggerEvent$","passive","subscribe","positionElement","_getHtmlElement","attachment","createRenderer","addPositionElement","event$","disable","enable","set","calcPosition","next","deletePositionElement","elRef","delete","setOptions","ɵfac","NgZone","RendererFactory2","ɵprov","type","args","providedIn","decorators","nativeElement"],"mappings":"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","sourcesContent":["import { getBsVer } from 'ngx-bootstrap/utils';\nimport * as i0 from '@angular/core';\nimport { PLATFORM_ID, Injectable, Inject, ElementRef } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { Subject, merge, fromEvent, of, animationFrameScheduler } from 'rxjs';\n\nvar MapPlacementInToRL;\n(function (MapPlacementInToRL) {\n    MapPlacementInToRL[\"top\"] = \"top\";\n    MapPlacementInToRL[\"bottom\"] = \"bottom\";\n    MapPlacementInToRL[\"left\"] = \"left\";\n    MapPlacementInToRL[\"right\"] = \"right\";\n    MapPlacementInToRL[\"auto\"] = \"auto\";\n    MapPlacementInToRL[\"end\"] = \"right\";\n    MapPlacementInToRL[\"start\"] = \"left\";\n    MapPlacementInToRL[\"top left\"] = \"top left\";\n    MapPlacementInToRL[\"top right\"] = \"top right\";\n    MapPlacementInToRL[\"right top\"] = \"right top\";\n    MapPlacementInToRL[\"right bottom\"] = \"right bottom\";\n    MapPlacementInToRL[\"bottom right\"] = \"bottom right\";\n    MapPlacementInToRL[\"bottom left\"] = \"bottom left\";\n    MapPlacementInToRL[\"left bottom\"] = \"left bottom\";\n    MapPlacementInToRL[\"left top\"] = \"left top\";\n    MapPlacementInToRL[\"top start\"] = \"top left\";\n    MapPlacementInToRL[\"top end\"] = \"top right\";\n    MapPlacementInToRL[\"end top\"] = \"right top\";\n    MapPlacementInToRL[\"end bottom\"] = \"right bottom\";\n    MapPlacementInToRL[\"bottom end\"] = \"bottom right\";\n    MapPlacementInToRL[\"bottom start\"] = \"bottom left\";\n    MapPlacementInToRL[\"start bottom\"] = \"start bottom\";\n    MapPlacementInToRL[\"start top\"] = \"left top\";\n})(MapPlacementInToRL || (MapPlacementInToRL = {}));\nvar PlacementForBs5;\n(function (PlacementForBs5) {\n    PlacementForBs5[\"top\"] = \"top\";\n    PlacementForBs5[\"bottom\"] = \"bottom\";\n    PlacementForBs5[\"left\"] = \"start\";\n    PlacementForBs5[\"right\"] = \"end\";\n    PlacementForBs5[\"auto\"] = \"auto\";\n    PlacementForBs5[\"end\"] = \"end\";\n    PlacementForBs5[\"start\"] = \"start\";\n    PlacementForBs5[\"top left\"] = \"top start\";\n    PlacementForBs5[\"top right\"] = \"top end\";\n    PlacementForBs5[\"right top\"] = \"end top\";\n    PlacementForBs5[\"right bottom\"] = \"end bottom\";\n    PlacementForBs5[\"bottom right\"] = \"bottom end\";\n    PlacementForBs5[\"bottom left\"] = \"bottom start\";\n    PlacementForBs5[\"left bottom\"] = \"start bottom\";\n    PlacementForBs5[\"left top\"] = \"start top\";\n    PlacementForBs5[\"top start\"] = \"top start\";\n    PlacementForBs5[\"top end\"] = \"top end\";\n    PlacementForBs5[\"end top\"] = \"end top\";\n    PlacementForBs5[\"end bottom\"] = \"end bottom\";\n    PlacementForBs5[\"bottom end\"] = \"bottom end\";\n    PlacementForBs5[\"bottom start\"] = \"bottom start\";\n    PlacementForBs5[\"start bottom\"] = \"start bottom\";\n    PlacementForBs5[\"start top\"] = \"start top\";\n})(PlacementForBs5 || (PlacementForBs5 = {}));\n\nfunction getStyleComputedProperty(element, property) {\n    if (element.nodeType !== 1) {\n        return [];\n    }\n    // NOTE: 1 DOM access here\n    const window = element.ownerDocument.defaultView;\n    const css = window?.getComputedStyle(element, null);\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    return property ? css && css[property] : css;\n}\n\n/**\n * Returns the offset parent of the given element\n */\nfunction getOffsetParent(element) {\n    if (!element) {\n        return document.documentElement;\n    }\n    const noOffsetParent = null;\n    // NOTE: 1 DOM access here\n    let offsetParent = element?.offsetParent;\n    // Skip hidden elements which don't have an offsetParent\n    let sibling = void 0;\n    while (offsetParent === noOffsetParent\n        && element.nextElementSibling\n        && sibling !== element.nextElementSibling) {\n        // todo: valorkin fix\n        sibling = element.nextElementSibling;\n        offsetParent = sibling.offsetParent;\n    }\n    const nodeName = offsetParent && offsetParent.nodeName;\n    if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n        return sibling ? sibling.ownerDocument.documentElement : document.documentElement;\n    }\n    // .offsetParent will return the closest TH, TD or TABLE in case\n    if (offsetParent &&\n        ['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 &&\n        getStyleComputedProperty(offsetParent, 'position') === 'static') {\n        return getOffsetParent(offsetParent);\n    }\n    return offsetParent;\n}\n\n// todo: valorkin fix\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction isOffsetContainer(element) {\n    const { nodeName } = element;\n    if (nodeName === 'BODY') {\n        return false;\n    }\n    return (nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element);\n}\n\n/**\n * Finds the root node (document, shadowDOM root) of the given element\n */\nfunction getRoot(node) {\n    if (node.parentNode !== null) {\n        return getRoot(node.parentNode);\n    }\n    return node;\n}\n\n/**\n * Finds the offset parent common to the two provided nodes\n */\nfunction findCommonOffsetParent(element1, element2) {\n    // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n    if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n        return document.documentElement;\n    }\n    // Here we make sure to give as \"start\" the element that comes first in the DOM\n    const order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;\n    const start = order ? element1 : element2;\n    const end = order ? element2 : element1;\n    // Get common ancestor container\n    const range = document.createRange();\n    range.setStart(start, 0);\n    range.setEnd(end, 0);\n    // todo: valorkin fix\n    const commonAncestorContainer = range.commonAncestorContainer;\n    // Both nodes are inside #document\n    if ((element1 !== commonAncestorContainer &&\n        element2 !== commonAncestorContainer) ||\n        start.contains(end)) {\n        if (isOffsetContainer(commonAncestorContainer)) {\n            return commonAncestorContainer;\n        }\n        return getOffsetParent(commonAncestorContainer);\n    }\n    // one of the nodes is inside shadowDOM, find which one\n    const element1root = getRoot(element1);\n    if (element1root.host) {\n        return findCommonOffsetParent(element1root.host, element2);\n    }\n    else {\n        return findCommonOffsetParent(element1, getRoot(element2).host);\n    }\n}\n\n/**\n * Finds the first parent of an element that has a transformed property defined\n */\nfunction getFixedPositionOffsetParent(element) {\n    // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n    if (!element || !element.parentElement) {\n        return document.documentElement;\n    }\n    let el = element.parentElement;\n    while (el?.parentElement && getStyleComputedProperty(el, 'transform') === 'none') {\n        el = el.parentElement;\n    }\n    return el || document.documentElement;\n}\n\n/**\n * Helper to detect borders of a given element\n */\nfunction getBordersSize(styles, axis) {\n    const sideA = axis === 'x' ? 'Left' : 'Top';\n    const sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n    return (parseFloat(styles[`border${sideA}Width`]) +\n        parseFloat(styles[`border${sideB}Width`]));\n}\n\nfunction getSize(axis, body, html, computedStyle) {\n    const _body = body;\n    const _html = html;\n    const _computedStyle = computedStyle;\n    return Math.max(_body[`offset${axis}`], _body[`scroll${axis}`], _html[`client${axis}`], _html[`offset${axis}`], _html[`scroll${axis}`], 0);\n}\nfunction getWindowSizes(document) {\n    const body = document.body;\n    const html = document.documentElement;\n    const computedStyle = void 0;\n    return {\n        height: getSize('Height', body, html, computedStyle),\n        width: getSize('Width', body, html, computedStyle)\n    };\n}\n\nfunction getClientRect(offsets) {\n    return {\n        ...offsets,\n        right: (offsets.left || 0) + offsets.width,\n        bottom: (offsets.top || 0) + offsets.height\n    };\n}\n\n/**\n * Tells if a given input is a number\n */\nfunction isNumeric(n) {\n    return n !== '' && !isNaN(parseFloat(n)) && isFinite(Number(n));\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction isNumber(value) {\n    return typeof value === 'number' || Object.prototype.toString.call(value) === '[object Number]';\n}\n\n/**\n * Get bounding client rect of given element\n */\nfunction getBoundingClientRect(element) {\n    const rect = element.getBoundingClientRect();\n    // IE10 10 FIX: Please, don't ask, the element isn't\n    // considered in DOM in some circumstances...\n    // This isn't reproducible in IE10 compatibility mode of IE11\n    // try {\n    //   if (isIE(10)) {\n    //     const scrollTop = getScroll(element, 'top');\n    //     const scrollLeft = getScroll(element, 'left');\n    //     if (rect && isNumber(rect.top) && isNumber(rect.left) && isNumber(rect.bottom) && isNumber(rect.right)) {\n    //       rect.top += scrollTop;\n    //       rect.left += scrollLeft;\n    //       rect.bottom += scrollTop;\n    //       rect.right += scrollLeft;\n    //     }\n    //   }\n    // } catch (e) {\n    //   return rect;\n    // }\n    if (!(rect && isNumber(rect.top) && isNumber(rect.left) && isNumber(rect.bottom) && isNumber(rect.right))) {\n        return rect;\n    }\n    const result = {\n        left: rect.left,\n        top: rect.top,\n        width: rect.right - rect.left,\n        height: rect.bottom - rect.top\n    };\n    // subtract scrollbar size from sizes\n    const sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : undefined;\n    const width = sizes?.width || element.clientWidth\n        || isNumber(rect.right) && isNumber(result.left) && rect.right - result.left || 0;\n    const height = sizes?.height || element.clientHeight\n        || isNumber(rect.bottom) && isNumber(result.top) && rect.bottom - result.top || 0;\n    let horizScrollbar = element.offsetWidth - width;\n    let vertScrollbar = element.offsetHeight - height;\n    // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n    // we make this check conditional for performance reasons\n    if (horizScrollbar || vertScrollbar) {\n        const styles = getStyleComputedProperty(element);\n        horizScrollbar -= getBordersSize(styles, 'x');\n        vertScrollbar -= getBordersSize(styles, 'y');\n        result.width -= horizScrollbar;\n        result.height -= vertScrollbar;\n    }\n    return getClientRect(result);\n}\n\n/**\n * Returns the parentNode or the host of the element\n */\n// todo: valorkin fix\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction getParentNode(element) {\n    if (element.nodeName === 'HTML') {\n        return element;\n    }\n    return element.parentNode || element.host;\n}\n\n/**\n * Returns the scrolling parent of the given element\n */\n// todo: valorkin fix\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction getScrollParent(element) {\n    // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n    if (!element) {\n        return document.body;\n    }\n    switch (element.nodeName) {\n        case 'HTML':\n        case 'BODY':\n            return element.ownerDocument.body;\n        case '#document':\n            return element.body;\n        default:\n    }\n    // Firefox want us to check `-x` and `-y` variations as well\n    const { overflow, overflowX, overflowY } = getStyleComputedProperty(element);\n    if (/(auto|scroll|overlay)/.test(String(overflow) + String(overflowY) + String(overflowX))) {\n        return element;\n    }\n    return getScrollParent(getParentNode(element));\n}\n\nfunction getOffsetRectRelativeToArbitraryNode(children, parent, fixedPosition = false) {\n    const isHTML = parent.nodeName === 'HTML';\n    const childrenRect = getBoundingClientRect(children);\n    const parentRect = getBoundingClientRect(parent);\n    const scrollParent = getScrollParent(children);\n    const styles = getStyleComputedProperty(parent);\n    const borderTopWidth = parseFloat(styles.borderTopWidth);\n    const borderLeftWidth = parseFloat(styles.borderLeftWidth);\n    // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n    if (fixedPosition && isHTML) {\n        parentRect.top = Math.max(parentRect.top ?? 0, 0);\n        parentRect.left = Math.max(parentRect.left ?? 0, 0);\n    }\n    const offsets = getClientRect({\n        top: (childrenRect.top ?? 0) - (parentRect.top ?? 0) - borderTopWidth,\n        left: (childrenRect.left ?? 0) - (parentRect.left ?? 0) - borderLeftWidth,\n        width: childrenRect.width,\n        height: childrenRect.height\n    });\n    offsets.marginTop = 0;\n    offsets.marginLeft = 0;\n    // Subtract margins of documentElement in case it's being used as parent\n    // we do this only on HTML because it's the only element that behaves\n    // differently when margins are applied to it. The margins are included in\n    // the box of the documentElement, in the other cases not.\n    if (isHTML) {\n        const marginTop = parseFloat(styles.marginTop);\n        const marginLeft = parseFloat(styles.marginLeft);\n        if (isNumber(offsets.top)) {\n            offsets.top -= borderTopWidth - marginTop;\n        }\n        if (isNumber(offsets.bottom)) {\n            offsets.bottom -= borderTopWidth - marginTop;\n        }\n        if (isNumber(offsets.left)) {\n            offsets.left -= borderLeftWidth - marginLeft;\n        }\n        if (isNumber(offsets.right)) {\n            offsets.right -= borderLeftWidth - marginLeft;\n        }\n        // Attach marginTop and marginLeft because in some circumstances we may need them\n        offsets.marginTop = marginTop;\n        offsets.marginLeft = marginLeft;\n    }\n    return offsets;\n}\n\n/**\n * Gets the scroll value of the given element in the given side (top and left)\n */\nfunction getScroll(element, side = 'top') {\n    const upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n    const nodeName = element.nodeName;\n    if (nodeName === 'BODY' || nodeName === 'HTML') {\n        const html = element.ownerDocument.documentElement;\n        const scrollingElement = element.ownerDocument.scrollingElement || html;\n        return scrollingElement[upperSide];\n    }\n    return element[upperSide];\n}\n\nfunction getViewportOffsetRectRelativeToArtbitraryNode(element, excludeScroll = false) {\n    const html = element.ownerDocument.documentElement;\n    const relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n    const width = Math.max(html.clientWidth, window.innerWidth || 0);\n    const height = Math.max(html.clientHeight, window.innerHeight || 0);\n    const scrollTop = !excludeScroll ? getScroll(html) : 0;\n    const scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n    const offset = {\n        top: scrollTop - Number(relativeOffset?.top) + Number(relativeOffset?.marginTop),\n        left: scrollLeft - Number(relativeOffset?.left) + Number(relativeOffset?.marginLeft),\n        width,\n        height\n    };\n    return getClientRect(offset);\n}\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n */\nfunction isFixed(element) {\n    const nodeName = element.nodeName;\n    if (nodeName === 'BODY' || nodeName === 'HTML') {\n        return false;\n    }\n    if (getStyleComputedProperty(element, 'position') === 'fixed') {\n        return true;\n    }\n    return isFixed(getParentNode(element));\n}\n\nfunction getBoundaries(target, host, padding = 0, boundariesElement, fixedPosition = false) {\n    // NOTE: 1 DOM access here\n    let boundaries = { top: 0, left: 0 };\n    const offsetParent = fixedPosition ? getFixedPositionOffsetParent(target) : findCommonOffsetParent(target, host);\n    // Handle viewport case\n    if (boundariesElement === 'viewport') {\n        boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n    }\n    else {\n        // Handle other cases based on DOM element used as boundaries\n        let boundariesNode;\n        if (boundariesElement === 'scrollParent') {\n            boundariesNode = getScrollParent(getParentNode(host));\n            if (boundariesNode.nodeName === 'BODY') {\n                boundariesNode = target.ownerDocument.documentElement;\n            }\n        }\n        else if (boundariesElement === 'window') {\n            boundariesNode = target.ownerDocument.documentElement;\n        }\n        else {\n            boundariesNode = boundariesElement;\n        }\n        const offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition);\n        // In case of HTML, we need a different computation\n        if (offsets && boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n            const { height, width } = getWindowSizes(target.ownerDocument);\n            if (isNumber(boundaries.top) && isNumber(offsets.top) && isNumber(offsets.marginTop)) {\n                boundaries.top += offsets.top - offsets.marginTop;\n            }\n            if (isNumber(boundaries.top)) {\n                boundaries.bottom = Number(height) + Number(offsets.top);\n            }\n            if (isNumber(boundaries.left) && isNumber(offsets.left) && isNumber(offsets.marginLeft)) {\n                boundaries.left += offsets.left - offsets.marginLeft;\n            }\n            if (isNumber(boundaries.top)) {\n                boundaries.right = Number(width) + Number(offsets.left);\n            }\n        }\n        else if (offsets) {\n            // for all the other DOM elements, this one is good\n            boundaries = offsets;\n        }\n    }\n    // Add paddings\n    if (isNumber(boundaries.left)) {\n        boundaries.left += padding;\n    }\n    if (isNumber(boundaries.top)) {\n        boundaries.top += padding;\n    }\n    if (isNumber(boundaries.right)) {\n        boundaries.right -= padding;\n    }\n    if (isNumber(boundaries.bottom)) {\n        boundaries.bottom -= padding;\n    }\n    return boundaries;\n}\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n */\nfunction getArea({ width, height }) {\n    return width * height;\n}\nfunction computeAutoPlacement(placement, refRect, target, host, allowedPositions = ['top', 'bottom', 'right', 'left'], boundariesElement = 'viewport', padding = 0) {\n    if (placement.indexOf('auto') === -1) {\n        return placement;\n    }\n    const boundaries = getBoundaries(target, host, padding, boundariesElement);\n    const rects = {\n        top: {\n            width: boundaries?.width ?? 0,\n            height: (refRect?.top ?? 0) - (boundaries?.top ?? 0)\n        },\n        right: {\n            width: (boundaries?.right ?? 0) - (refRect?.right ?? 0),\n            height: boundaries?.height ?? 0\n        },\n        bottom: {\n            width: boundaries?.width ?? 0,\n            height: (boundaries?.bottom ?? 0) - (refRect?.bottom ?? 0)\n        },\n        left: {\n            width: (refRect.left ?? 0) - (boundaries?.left ?? 0),\n            height: boundaries?.height ?? 0\n        }\n    };\n    const sortedAreas = Object.keys(rects)\n        .map((key) => ({\n        position: key,\n        ...rects[key],\n        area: getArea(rects[key])\n    }))\n        .sort((a, b) => b.area - a.area);\n    let filteredAreas = sortedAreas.filter(({ width, height }) => {\n        return width >= target.clientWidth && height >= target.clientHeight;\n    });\n    filteredAreas = filteredAreas.filter(({ position }) => {\n        return allowedPositions.some((allowedPosition) => {\n            return allowedPosition === position;\n        });\n    });\n    const computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].position : sortedAreas[0].position;\n    const variation = placement.split(' ')[1];\n    // for tooltip on auto position\n    target.className = target.className.replace(/bs-tooltip-auto/g, `bs-tooltip-${getBsVer().isBs5 ? PlacementForBs5[computedPlacement] : computedPlacement}`);\n    return computedPlacement + (variation ? `-${variation}` : '');\n}\n\nfunction getOffsets(data) {\n    return {\n        width: data.offsets.target.width,\n        height: data.offsets.target.height,\n        left: Math.floor(data.offsets.target.left ?? 0),\n        top: Math.round(data.offsets.target.top ?? 0),\n        bottom: Math.round(data.offsets.target.bottom ?? 0),\n        right: Math.floor(data.offsets.target.right ?? 0)\n    };\n}\n\n/**\n * Get the opposite placement of the given one\n */\nfunction getOppositePlacement(placement) {\n    const hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n    return placement.replace(/left|right|bottom|top/g, matched => hash[matched]);\n}\n\n/**\n * Get the opposite placement variation of the given one\n */\nfunction getOppositeVariation(variation) {\n    if (variation === 'right') {\n        return 'left';\n    }\n    else if (variation === 'left') {\n        return 'right';\n    }\n    return variation;\n}\n\nconst parse = (value, def = 0) => value ? parseFloat(value) : def;\nfunction getOuterSizes(element) {\n    const window = element.ownerDocument.defaultView;\n    const styles = window?.getComputedStyle(element);\n    const x = parse(styles?.marginTop) + parse(styles?.marginBottom);\n    const y = parse(styles?.marginLeft) + parse(styles?.marginRight);\n    return {\n        width: Number(element.offsetWidth) + y,\n        height: Number(element.offsetHeight) + x\n    };\n}\n\n/**\n * Get offsets to the reference element\n */\nfunction getReferenceOffsets(target, host, fixedPosition) {\n    const commonOffsetParent = fixedPosition\n        ? getFixedPositionOffsetParent(target)\n        : findCommonOffsetParent(target, host);\n    return getOffsetRectRelativeToArbitraryNode(host, commonOffsetParent, fixedPosition);\n}\n\n/**\n * Get offsets to the target\n */\nfunction getTargetOffsets(target, hostOffsets, position) {\n    const placement = position.split(' ')[0];\n    // Get target node sizes\n    const targetRect = getOuterSizes(target);\n    // Add position, width and height to our offsets object\n    const targetOffsets = {\n        width: targetRect.width,\n        height: targetRect.height\n    };\n    // depending by the target placement we have to compute its offsets slightly differently\n    const isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n    const mainSide = isHoriz ? 'top' : 'left';\n    const secondarySide = isHoriz ? 'left' : 'top';\n    const measurement = isHoriz ? 'height' : 'width';\n    const secondaryMeasurement = !isHoriz ? 'height' : 'width';\n    targetOffsets[mainSide] =\n        (hostOffsets[mainSide] ?? 0) +\n            hostOffsets[measurement] / 2 -\n            targetRect[measurement] / 2;\n    targetOffsets[secondarySide] = placement === secondarySide\n        ? (hostOffsets[secondarySide] ?? 0) - targetRect[secondaryMeasurement]\n        : hostOffsets[getOppositePlacement(secondarySide)] ?? 0;\n    return targetOffsets;\n}\n\nfunction isModifierEnabled(options, modifierName) {\n    return !!options.modifiers[modifierName]?.enabled;\n}\n\nconst availablePositions = {\n    top: ['top', 'top start', 'top end'],\n    bottom: ['bottom', 'bottom start', 'bottom end'],\n    start: ['start', 'start top', 'start bottom'],\n    end: ['end', 'end top', 'end bottom']\n};\nfunction checkPopoverMargin(placement, checkPosition) {\n    if (!getBsVer().isBs5) {\n        return false;\n    }\n    return availablePositions[checkPosition].includes(placement);\n}\nfunction checkMargins(placement) {\n    if (!getBsVer().isBs5) {\n        return '';\n    }\n    if (checkPopoverMargin(placement, 'end')) {\n        return 'ms-2';\n    }\n    if (checkPopoverMargin(placement, 'start')) {\n        return 'me-2';\n    }\n    if (checkPopoverMargin(placement, 'top')) {\n        return 'mb-2';\n    }\n    if (checkPopoverMargin(placement, 'bottom')) {\n        return 'mt-2';\n    }\n    return '';\n}\n\nfunction updateContainerClass(data, renderer) {\n    const target = data.instance.target;\n    let containerClass = target.className;\n    const dataPlacement = getBsVer().isBs5 ? PlacementForBs5[data.placement] : data.placement;\n    if (data.placementAuto) {\n        containerClass = containerClass.replace(/bs-popover-auto/g, `bs-popover-${dataPlacement}`);\n        containerClass = containerClass.replace(/ms-2|me-2|mb-2|mt-2/g, '');\n        containerClass = containerClass.replace(/bs-tooltip-auto/g, `bs-tooltip-${dataPlacement}`);\n        containerClass = containerClass.replace(/\\sauto/g, ` ${dataPlacement}`);\n        if (containerClass.indexOf('popover') !== -1) {\n            containerClass = containerClass + ' ' + checkMargins(dataPlacement);\n        }\n        if (containerClass.indexOf('popover') !== -1 && containerClass.indexOf('popover-auto') === -1) {\n            containerClass += ' popover-auto';\n        }\n        if (containerClass.indexOf('tooltip') !== -1 && containerClass.indexOf('tooltip-auto') === -1) {\n            containerClass += ' tooltip-auto';\n        }\n    }\n    containerClass = containerClass.replace(/left|right|top|bottom|end|start/g, `${dataPlacement.split(' ')[0]}`);\n    if (renderer) {\n        renderer.setAttribute(target, 'class', containerClass);\n        return;\n    }\n    target.className = containerClass;\n}\n\nfunction setStyles(element, styles, renderer) {\n    if (!element || !styles) {\n        return;\n    }\n    Object.keys(styles).forEach((prop) => {\n        let unit = '';\n        // add unit if the value is numeric and is one of the following\n        if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 &&\n            isNumeric(styles[prop])) {\n            unit = 'px';\n        }\n        if (renderer) {\n            renderer.setStyle(element, prop, `${String(styles[prop])}${unit}`);\n            return;\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        element.style[prop] = String(styles[prop]) + unit;\n    });\n}\n\nfunction arrow(data) {\n    let targetOffsets = data.offsets.target;\n    // if arrowElement is a string, suppose it's a CSS selector\n    const arrowElement = data.instance.target.querySelector('.arrow');\n    // if arrowElement is not found, don't run the modifier\n    if (!arrowElement) {\n        return data;\n    }\n    const isVertical = ['left', 'right'].indexOf(data.placement.split(' ')[0]) !== -1;\n    const len = isVertical ? 'height' : 'width';\n    const sideCapitalized = isVertical ? 'Top' : 'Left';\n    const side = sideCapitalized.toLowerCase();\n    const altSide = isVertical ? 'left' : 'top';\n    const opSide = isVertical ? 'bottom' : 'right';\n    const arrowElementSize = getOuterSizes(arrowElement)[len];\n    const placementVariation = data.placement.split(' ')[1];\n    // top/left side\n    if ((data.offsets.host[opSide] ?? 0) - arrowElementSize < (targetOffsets[side] ?? 0)) {\n        (targetOffsets)[side] -=\n            (targetOffsets[side] ?? 0) - ((data.offsets.host[opSide] ?? 0) - arrowElementSize);\n    }\n    // bottom/right side\n    if (Number((data).offsets.host[side]) + Number(arrowElementSize) > (targetOffsets[opSide] ?? 0)) {\n        (targetOffsets)[side] +=\n            Number((data).offsets.host[side]) + Number(arrowElementSize) - Number((targetOffsets)[opSide]);\n    }\n    targetOffsets = getClientRect(targetOffsets);\n    // Compute the sideValue using the updated target offsets\n    // take target margin in account because we don't have this info available\n    const css = getStyleComputedProperty(data.instance.target);\n    const targetMarginSide = parseFloat(css[`margin${sideCapitalized}`]) || 0;\n    const targetBorderSide = parseFloat(css[`border${sideCapitalized}Width`]) || 0;\n    // compute center of the target\n    let center;\n    if (!placementVariation) {\n        center = Number((data).offsets.host[side]) + Number(data.offsets.host[len] / 2 - arrowElementSize / 2);\n    }\n    else {\n        const targetBorderRadius = parseFloat(css[\"borderRadius\"]) || 0;\n        const targetSideArrowOffset = Number(targetMarginSide + targetBorderSide + targetBorderRadius);\n        center = side === placementVariation ?\n            Number((data).offsets.host[side]) + targetSideArrowOffset :\n            Number((data).offsets.host[side]) + Number(data.offsets.host[len] - targetSideArrowOffset);\n    }\n    let sideValue = center - (targetOffsets[side] ?? 0) - targetMarginSide - targetBorderSide;\n    // prevent arrowElement from being placed not contiguously to its target\n    sideValue = Math.max(Math.min(targetOffsets[len] - (arrowElementSize + 5), sideValue), 0);\n    data.offsets.arrow = {\n        [side]: Math.round(sideValue),\n        [altSide]: '' // make sure to unset any eventual altSide value from the DOM node\n    };\n    data.instance.arrow = arrowElement;\n    return data;\n}\n\nfunction flip(data) {\n    data.offsets.target = getClientRect(data.offsets.target);\n    if (!isModifierEnabled(data.options, 'flip')) {\n        data.offsets.target = {\n            ...data.offsets.target,\n            ...getTargetOffsets(data.instance.target, data.offsets.host, data.placement)\n        };\n        return data;\n    }\n    const boundaries = getBoundaries(data.instance.target, data.instance.host, 0, // padding\n    'viewport', false // positionFixed\n    );\n    let placement = data.placement.split(' ')[0];\n    let variation = data.placement.split(' ')[1] || '';\n    const offsetsHost = data.offsets.host;\n    const target = data.instance.target;\n    const host = data.instance.host;\n    const adaptivePosition = computeAutoPlacement('auto', offsetsHost, target, host, data.options.allowedPositions);\n    const flipOrder = [placement, adaptivePosition];\n    flipOrder.forEach((step, index) => {\n        if (placement !== step || flipOrder.length === index + 1) {\n            return;\n        }\n        placement = data.placement.split(' ')[0];\n        // using floor because the host offsets may contain decimals we are not going to consider here\n        const overlapsRef = (placement === 'left' &&\n            Math.floor(data.offsets.target.right ?? 0) > Math.floor(data.offsets.host.left ?? 0)) ||\n            (placement === 'right' &&\n                Math.floor(data.offsets.target.left ?? 0) < Math.floor(data.offsets.host.right ?? 0)) ||\n            (placement === 'top' &&\n                Math.floor(data.offsets.target.bottom ?? 0) > Math.floor(data.offsets.host.top ?? 0)) ||\n            (placement === 'bottom' &&\n                Math.floor(data.offsets.target.top ?? 0) < Math.floor(data.offsets.host.bottom ?? 0));\n        const overflowsLeft = Math.floor(data.offsets.target.left ?? 0) < Math.floor(boundaries.left ?? 0);\n        const overflowsRight = Math.floor(data.offsets.target.right ?? 0) > Math.floor(boundaries.right ?? 0);\n        const overflowsTop = Math.floor(data.offsets.target.top ?? 0) < Math.floor(boundaries.top ?? 0);\n        const overflowsBottom = Math.floor(data.offsets.target.bottom ?? 0) > Math.floor(boundaries.bottom ?? 0);\n        const overflowsBoundaries = (placement === 'left' && overflowsLeft) ||\n            (placement === 'right' && overflowsRight) ||\n            (placement === 'top' && overflowsTop) ||\n            (placement === 'bottom' && overflowsBottom);\n        // flip the variation if required\n        const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n        const flippedVariation = ((isVertical && variation === 'left' && overflowsLeft) ||\n            (isVertical && variation === 'right' && overflowsRight) ||\n            (!isVertical && variation === 'left' && overflowsTop) ||\n            (!isVertical && variation === 'right' && overflowsBottom));\n        if (overlapsRef || overflowsBoundaries || flippedVariation) {\n            if (overlapsRef || overflowsBoundaries) {\n                placement = flipOrder[index + 1];\n            }\n            if (flippedVariation) {\n                variation = getOppositeVariation(variation);\n            }\n            data.placement = placement + (variation ? ` ${variation}` : '');\n            data.offsets.target = {\n                ...data.offsets.target,\n                ...getTargetOffsets(data.instance.target, data.offsets.host, data.placement)\n            };\n        }\n    });\n    return data;\n}\n\nfunction initData(targetElement, hostElement, position, options) {\n    if (!targetElement || !hostElement) {\n        return;\n    }\n    const hostElPosition = getReferenceOffsets(targetElement, hostElement);\n    if (!position.match(/^(auto)*\\s*(left|right|top|bottom|start|end)*$/)\n        && !position.match(/^(left|right|top|bottom|start|end)*(?: (left|right|top|bottom|start|end))*$/)) {\n        position = 'auto';\n    }\n    const placementAuto = !!position.match(/auto/g);\n    // support old placements 'auto left|right|top|bottom'\n    let placement = position.match(/auto\\s(left|right|top|bottom|start|end)/)\n        ? position.split(' ')[1] || 'auto'\n        : position;\n    // Normalize placements that have identical main placement and variation (\"right right\" => \"right\").\n    const matches = placement.match(/^(left|right|top|bottom|start|end)* ?(?!\\1)(left|right|top|bottom|start|end)?/);\n    if (matches) {\n        placement = matches[1] + (matches[2] ? ` ${matches[2]}` : '');\n    }\n    // \"left right\", \"top bottom\" etc. placements also considered incorrect.\n    if (['left right', 'right left', 'top bottom', 'bottom top'].indexOf(placement) !== -1) {\n        placement = 'auto';\n    }\n    placement = computeAutoPlacement(placement, hostElPosition, targetElement, hostElement, options ? options.allowedPositions : undefined);\n    const targetOffset = getTargetOffsets(targetElement, hostElPosition, placement);\n    return {\n        options: options || { modifiers: {} },\n        instance: {\n            target: targetElement,\n            host: hostElement,\n            arrow: void 0\n        },\n        offsets: {\n            target: targetOffset,\n            host: hostElPosition,\n            arrow: void 0\n        },\n        positionFixed: false,\n        placement,\n        placementAuto\n    };\n}\n\nfunction preventOverflow(data) {\n    if (!isModifierEnabled(data.options, 'preventOverflow')) {\n        return data;\n    }\n    // NOTE: DOM access here\n    // resets the target Offsets's position so that the document size can be calculated excluding\n    // the size of the targetOffsets element itself\n    const transformProp = 'transform';\n    const targetStyles = data.instance.target.style; // assignment to help minification\n    const { top, left, [transformProp]: transform } = targetStyles;\n    targetStyles.top = '';\n    targetStyles.left = '';\n    targetStyles[transformProp] = '';\n    const boundaries = getBoundaries(data.instance.target, data.instance.host, 0, // padding\n    data.options.modifiers.preventOverflow?.boundariesElement || 'scrollParent', false // positionFixed\n    );\n    // NOTE: DOM access here\n    // restores the original style properties after the offsets have been computed\n    targetStyles.top = top;\n    targetStyles.left = left;\n    targetStyles[transformProp] = transform;\n    const order = ['left', 'right', 'top', 'bottom'];\n    const check = {\n        primary(placement) {\n            let value = data.offsets.target[placement];\n            // options.escapeWithReference\n            if ((data.offsets.target[placement] ?? 0) < (boundaries[placement] ?? 0)) {\n                value = Math.max(data.offsets.target[placement] ?? 0, boundaries[placement] ?? 0);\n            }\n            return { [placement]: value };\n        },\n        secondary(placement) {\n            const isPlacementHorizontal = placement === 'right';\n            const mainSide = isPlacementHorizontal ? 'left' : 'top';\n            const measurement = isPlacementHorizontal ? 'width' : 'height';\n            let value = data.offsets.target[mainSide];\n            // escapeWithReference\n            if ((data.offsets.target[placement] ?? 0) > (boundaries[placement] ?? 0)) {\n                value = Math.min(data.offsets.target[mainSide] ?? 0, (boundaries[placement] ?? 0) - data.offsets.target[measurement]);\n            }\n            return { [mainSide]: value };\n        }\n    };\n    order.forEach((placement) => {\n        const side = ['left', 'top', 'start'].indexOf(placement) !== -1 ? check['primary'] : check['secondary'];\n        data.offsets.target = {\n            ...data.offsets.target,\n            ...side(placement)\n        };\n    });\n    return data;\n}\n\nfunction shift(data) {\n    const placement = data.placement;\n    const basePlacement = placement.split(' ')[0];\n    const shiftVariation = placement.split(' ')[1];\n    if (shiftVariation) {\n        const { host, target } = data.offsets;\n        const isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n        const side = isVertical ? 'left' : 'top';\n        const measurement = isVertical ? 'width' : 'height';\n        const shiftOffsets = {\n            start: { [side]: host[side] },\n            end: {\n                [side]: (host[side] ?? 0) + host[measurement] - target[measurement]\n            }\n        };\n        data.offsets.target = {\n            ...target, ...{\n                [side]: (side === shiftVariation ? shiftOffsets.start[side] : shiftOffsets.end[side])\n            }\n        };\n    }\n    return data;\n}\n\nclass Positioning {\n    position(hostElement, targetElement /*, round = true*/) {\n        return this.offset(hostElement, targetElement /*, false*/);\n    }\n    offset(hostElement, targetElement /*, round = true*/) {\n        return getReferenceOffsets(targetElement, hostElement);\n    }\n    positionElements(hostElement, targetElement, position, appendToBody, options) {\n        const chainOfModifiers = [flip, shift, preventOverflow, arrow];\n        const _position = MapPlacementInToRL[position];\n        const data = initData(targetElement, hostElement, _position, options);\n        if (!data) {\n            return;\n        }\n        return chainOfModifiers.reduce((modifiedData, modifier) => modifier(modifiedData), data);\n    }\n}\nconst positionService = new Positioning();\nfunction positionElements(hostElement, targetElement, placement, appendToBody, options, renderer) {\n    const data = positionService.positionElements(hostElement, targetElement, placement, appendToBody, options);\n    if (!data) {\n        return;\n    }\n    const offsets = getOffsets(data);\n    setStyles(targetElement, {\n        'will-change': 'transform',\n        top: '0px',\n        left: '0px',\n        transform: `translate3d(${offsets.left}px, ${offsets.top}px, 0px)`\n    }, renderer);\n    if (data.instance.arrow) {\n        setStyles(data.instance.arrow, data.offsets.arrow, renderer);\n    }\n    updateContainerClass(data, renderer);\n}\n\nclass PositioningService {\n    constructor(ngZone, rendererFactory, platformId) {\n        this.update$$ = new Subject();\n        this.positionElements = new Map();\n        this.isDisabled = false;\n        if (isPlatformBrowser(platformId)) {\n            ngZone.runOutsideAngular(() => {\n                this.triggerEvent$ = merge(fromEvent(window, 'scroll', { passive: true }), fromEvent(window, 'resize', { passive: true }), of(0, animationFrameScheduler), this.update$$);\n                this.triggerEvent$.subscribe(() => {\n                    if (this.isDisabled) {\n                        return;\n                    }\n                    this.positionElements\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        .forEach((positionElement) => {\n                        positionElements(_getHtmlElement(positionElement.target), _getHtmlElement(positionElement.element), positionElement.attachment, positionElement.appendToBody, this.options, rendererFactory.createRenderer(null, null));\n                    });\n                });\n            });\n        }\n    }\n    position(options) {\n        this.addPositionElement(options);\n    }\n    get event$() {\n        return this.triggerEvent$;\n    }\n    disable() {\n        this.isDisabled = true;\n    }\n    enable() {\n        this.isDisabled = false;\n    }\n    addPositionElement(options) {\n        this.positionElements.set(_getHtmlElement(options.element), options);\n    }\n    calcPosition() {\n        this.update$$.next(null);\n    }\n    deletePositionElement(elRef) {\n        this.positionElements.delete(_getHtmlElement(elRef));\n    }\n    setOptions(options) {\n        this.options = options;\n    }\n}\nPositioningService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: PositioningService, deps: [{ token: i0.NgZone }, { token: i0.RendererFactory2 }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Injectable });\nPositioningService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: PositioningService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.1\", ngImport: i0, type: PositioningService, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: i0.RendererFactory2 }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; } });\nfunction _getHtmlElement(element) {\n    // it means that we got a selector\n    if (typeof element === 'string') {\n        return document.querySelector(element);\n    }\n    if (element instanceof ElementRef) {\n        return element.nativeElement;\n    }\n    return element ?? null;\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { PlacementForBs5, Positioning, PositioningService, checkMargins, positionElements };\n"]},"metadata":{},"sourceType":"module"}